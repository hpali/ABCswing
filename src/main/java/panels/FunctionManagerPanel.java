/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panels;

import dao.FunctionDAO;
import dao.RoleDAO;
import dao.RoleFunctionsDAO;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.ListSelectionModel;
import main.MainWindow;
import common.RootWindow;
import object.Function;
import object.Role;

/**
 *
 * @author Admin
 */
public class FunctionManagerPanel extends RootWindow {

    MainWindow mainFrame;
    RoleDAO roleDAO;
    FunctionDAO functionDAO;
    RoleFunctionsDAO roleFunctionsDAO;
    Vector<String> selectedFunctions = new Vector<String>();
    Vector roles = new Vector();
    Vector functions = new Vector();
    String selectedRole;

    public FunctionManagerPanel(MainWindow mainwindow) {
        initComponents();
        this.mainFrame = mainwindow;
        this.roleDAO = mainFrame.getDbManager().getRoleDAO();
        this.functionDAO = mainFrame.getDbManager().getFunctionDAO();
        this.roleFunctionsDAO = mainFrame.getDbManager().getRoleFunctionsDAO();
        roles = roleDAO.getRoleVector();
        functions = functionDAO.getFunctionVector();
        afterInitComponents();
    }

    private void afterInitComponents() {
        setSize(700, 600);
        selectedRole = "";
        setAllFunctionsList();
        for (Object role : roles) {
            cbRoles.addItem(role.toString());
        }
        listAllFunction.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        refresh();
        setVisible(true);
    }

    public void setAllFunctionsList() {
        String[] st;
        int size = functions.size();
        st = new String[size];
        for (int i = 0; i < size; i++) {
            st[i] = functions.get(i).toString();
        }
        listAllFunction.setListData(st);
        listFunction.updateUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listAllFunction = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listFunction = new javax.swing.JList<>();
        buAdd = new javax.swing.JButton();
        buRemove = new javax.swing.JButton();
        buAddAll = new javax.swing.JButton();
        butRemoveAll = new javax.swing.JButton();
        butFuncManCancel = new javax.swing.JButton();
        buFuncManOK = new javax.swing.JButton();
        cbRoles = new javax.swing.JComboBox<>();

        listAllFunction.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        listAllFunction.setMinimumSize(new java.awt.Dimension(200, 300));
        jScrollPane1.setViewportView(listAllFunction);

        listFunction.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane2.setViewportView(listFunction);

        buAdd.setText("Add");
        buAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buAddActionPerformed(evt);
            }
        });

        buRemove.setText("Remove");
        buRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buRemoveActionPerformed(evt);
            }
        });

        buAddAll.setText("Add All");
        buAddAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buAddAllActionPerformed(evt);
            }
        });

        butRemoveAll.setText("Remove All");
        butRemoveAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butRemoveAllActionPerformed(evt);
            }
        });

        butFuncManCancel.setText("Cancel");
        butFuncManCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butFuncManCancelActionPerformed(evt);
            }
        });

        buFuncManOK.setText("OK");
        buFuncManOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buFuncManOKActionPerformed(evt);
            }
        });

        cbRoles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRolesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(butFuncManCancel, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbRoles, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buAddAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(butRemoveAll, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(buFuncManOK, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butFuncManCancel)
                    .addComponent(buFuncManOK))
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(cbRoles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buAdd)
                .addGap(43, 43, 43)
                .addComponent(buRemove)
                .addGap(62, 62, 62)
                .addComponent(buAddAll)
                .addGap(64, 64, 64)
                .addComponent(butRemoveAll)
                .addGap(116, 116, 116))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void setSelList() {
        listFunction.setListData(selectedFunctions);
        listFunction.updateUI();
    }

    private void buAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buAddActionPerformed

        if (!listAllFunction.getSelectedValue().isEmpty()
                && !selectedFunctions.contains(listAllFunction.getSelectedValue())) {
            ArrayList<String> sl = (ArrayList<String>) listAllFunction.getSelectedValuesList();
            for (String function : sl) {
                selectedFunctions.add(function);
            }
            setSelList();
        }

    }//GEN-LAST:event_buAddActionPerformed

    private void buRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buRemoveActionPerformed
        selectedFunctions.remove(listFunction.getSelectedValuesList());
        setSelList();
    }//GEN-LAST:event_buRemoveActionPerformed

    private void buAddAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buAddAllActionPerformed
        selectedFunctions.removeAllElements();
        for (Object function : functions) {
            selectedFunctions.add(function.toString());
        }
        setSelList();
    }//GEN-LAST:event_buAddAllActionPerformed

    private void butRemoveAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butRemoveAllActionPerformed
        clearSelectedList();
    }//GEN-LAST:event_butRemoveAllActionPerformed

    private void butFuncManCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butFuncManCancelActionPerformed
        setVisible(false);
    }//GEN-LAST:event_butFuncManCancelActionPerformed

    private void buFuncManOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buFuncManOKActionPerformed
        selectedRole = (String) cbRoles.getSelectedItem();
        Role role = roleDAO.getRole(selectedRole);
        Vector<Function> viktor = new Vector<Function>();

        if (!selectedRole.isEmpty()) {
            for (String functionName : selectedFunctions) {
                Function r = functionDAO.getFunction(functionName);
                viktor.add(r);
            }
        }
        roleFunctionsDAO.doRolFuncInsert(role, viktor);
        // clearSelectedList();
    }//GEN-LAST:event_buFuncManOKActionPerformed

    private void cbRolesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRolesActionPerformed
        clearSelectedList();
        selectedRole = (String) cbRoles.getSelectedItem();
        Vector<String> viktor = roleFunctionsDAO.getFunctionsToRle(selectedRole);
        for (String function : viktor) {
            selectedFunctions.add(function);
        }
        setSelList();
        System.out.println("ajaj");
    }//GEN-LAST:event_cbRolesActionPerformed

    public void clearSelectedList() {
        selectedFunctions.removeAllElements();
        setSelList();;
    }

    @Override
    public void refresh() {
        repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buAdd;
    private javax.swing.JButton buAddAll;
    private javax.swing.JButton buFuncManOK;
    private javax.swing.JButton buRemove;
    private javax.swing.JButton butFuncManCancel;
    private javax.swing.JButton butRemoveAll;
    private javax.swing.JComboBox<String> cbRoles;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listAllFunction;
    private javax.swing.JList<String> listFunction;
    // End of variables declaration//GEN-END:variables
}
